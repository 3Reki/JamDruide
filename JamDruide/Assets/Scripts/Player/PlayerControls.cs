//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Player
{
    public partial class @PlayerControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""4c13807f-de86-42be-8676-b5a4309c7e13"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""1e6b4262-bb69-4ef8-980b-1ae8f56b802b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ef030785-2a8e-4c83-b38a-cbeaced5f37d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookDown"",
                    ""type"": ""Button"",
                    ""id"": ""385a3a64-8170-41a6-a2a2-13c56a9b9e11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""9c2a772b-5b04-4646-a6db-77242c7180c8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d9dfe99a-53ad-41fa-9cd2-edd3334e1b4d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b44027a6-4c1a-4258-9bc6-778435ac2e7e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8ee677bb-9d65-466a-a64c-ce270b41eb38"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1398694-9761-493f-93c3-bf3a4e9ff5a6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""358641aa-024d-4d0f-9430-672b5b68b1f2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ee105f5-4932-43d4-b22d-92f76f2b739b"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3db6452b-4c8b-437b-a3b1-95a3956b7bbd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""LookDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22afaedd-7255-4539-855d-21676c299253"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LookDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Action"",
            ""id"": ""9a0d947c-ca88-4c37-ba7c-c8ecadc92aa5"",
            ""actions"": [
                {
                    ""name"": ""Restart"",
                    ""type"": ""Button"",
                    ""id"": ""e15fa8e6-01a2-46ea-96f9-487efcaf9eda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drink"",
                    ""type"": ""Button"",
                    ""id"": ""a02122d0-894e-4374-ac4f-728e8f145ca1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""75e5d4ea-f9ee-4442-9651-ef5652b4d6f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""62e52cf0-2da0-4421-8aac-ab21e617df74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyboardAim"",
                    ""type"": ""Value"",
                    ""id"": ""5e64bc50-604f-4fc4-8246-e1a0ce699d88"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GamepadAim"",
                    ""type"": ""Value"",
                    ""id"": ""2d2afd90-7489-424d-8b4e-7c815564a7a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""77910097-e047-40b8-867d-1ee85d13ed58"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""208cce5d-5016-47b2-8e46-7b837e406e19"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Restart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80679614-3c0f-4c95-a5f9-8b12f1139c70"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Drink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b6f554a-5a52-4eb1-8aaf-bd9517593709"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Drink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d8b1a81-0059-4afd-b5f3-e25f7aa8f449"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8712fcbe-94bb-4099-806e-e60aa13187e1"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""430af4e9-2ce6-4e3d-bc43-7d0f26d99052"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f255706-badc-41fd-9608-fe8d511ed103"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c2148b7-da06-4202-9741-115bdbff04da"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GamepadAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44d90439-5afd-47c4-8e32-49b81cd42f46"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Other"",
            ""id"": ""f78515b9-1802-4224-921b-acaa64d4027e"",
            ""actions"": [
                {
                    ""name"": ""Potion1"",
                    ""type"": ""Button"",
                    ""id"": ""69491034-ee39-4ff0-90f8-c834ff9dbf88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Potion2"",
                    ""type"": ""Button"",
                    ""id"": ""5ecb35cf-7a81-4691-b131-20a05d4daf55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Potion3"",
                    ""type"": ""Button"",
                    ""id"": ""10251117-6db1-45a2-82ef-513f48400b1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""0dc253b8-a0ee-4d89-98c2-8357a695bf67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollPotionUp"",
                    ""type"": ""Button"",
                    ""id"": ""222c839c-194e-4720-84b6-6d604eb7b084"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollPotionDown"",
                    ""type"": ""Button"",
                    ""id"": ""e3f7930d-901d-4ec4-b66f-a9d99f789a8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f0e33957-1750-43b6-9912-723e48d3da66"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Potion1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c3a3c5e-7ad6-4a9e-8721-5cdc0dc82244"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Potion2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77d072e6-f93b-44f9-9237-8ba965a0850e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Potion3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbc40d36-20e2-46ed-bbaa-8c56bbb176d4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a61148b-601a-422b-ba3f-257640418f6d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""094cf43b-64e9-440c-9dcc-44e6c3dc372c"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ScrollPotionUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d9ddd3-cc02-4b69-9da0-d1823f8cc900"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ScrollPotionUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d04aa823-a133-499c-948a-21156ecac2b5"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ScrollPotionDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2444c098-bafe-4ef6-8216-d729388bf9ad"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ScrollPotionDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Movement
            m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
            m_Movement_Move = m_Movement.FindAction("Move", throwIfNotFound: true);
            m_Movement_Jump = m_Movement.FindAction("Jump", throwIfNotFound: true);
            m_Movement_LookDown = m_Movement.FindAction("LookDown", throwIfNotFound: true);
            // Action
            m_Action = asset.FindActionMap("Action", throwIfNotFound: true);
            m_Action_Restart = m_Action.FindAction("Restart", throwIfNotFound: true);
            m_Action_Drink = m_Action.FindAction("Drink", throwIfNotFound: true);
            m_Action_Throw = m_Action.FindAction("Throw", throwIfNotFound: true);
            m_Action_Interact = m_Action.FindAction("Interact", throwIfNotFound: true);
            m_Action_KeyboardAim = m_Action.FindAction("KeyboardAim", throwIfNotFound: true);
            m_Action_GamepadAim = m_Action.FindAction("GamepadAim", throwIfNotFound: true);
            // Other
            m_Other = asset.FindActionMap("Other", throwIfNotFound: true);
            m_Other_Potion1 = m_Other.FindAction("Potion1", throwIfNotFound: true);
            m_Other_Potion2 = m_Other.FindAction("Potion2", throwIfNotFound: true);
            m_Other_Potion3 = m_Other.FindAction("Potion3", throwIfNotFound: true);
            m_Other_Menu = m_Other.FindAction("Menu", throwIfNotFound: true);
            m_Other_ScrollPotionUp = m_Other.FindAction("ScrollPotionUp", throwIfNotFound: true);
            m_Other_ScrollPotionDown = m_Other.FindAction("ScrollPotionDown", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Movement
        private readonly InputActionMap m_Movement;
        private IMovementActions m_MovementActionsCallbackInterface;
        private readonly InputAction m_Movement_Move;
        private readonly InputAction m_Movement_Jump;
        private readonly InputAction m_Movement_LookDown;
        public struct MovementActions
        {
            private @PlayerControls m_Wrapper;
            public MovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Movement_Move;
            public InputAction @Jump => m_Wrapper.m_Movement_Jump;
            public InputAction @LookDown => m_Wrapper.m_Movement_LookDown;
            public InputActionMap Get() { return m_Wrapper.m_Movement; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
            public void SetCallbacks(IMovementActions instance)
            {
                if (m_Wrapper.m_MovementActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMove;
                    @Jump.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                    @LookDown.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnLookDown;
                    @LookDown.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnLookDown;
                    @LookDown.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnLookDown;
                }
                m_Wrapper.m_MovementActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @LookDown.started += instance.OnLookDown;
                    @LookDown.performed += instance.OnLookDown;
                    @LookDown.canceled += instance.OnLookDown;
                }
            }
        }
        public MovementActions @Movement => new MovementActions(this);

        // Action
        private readonly InputActionMap m_Action;
        private IActionActions m_ActionActionsCallbackInterface;
        private readonly InputAction m_Action_Restart;
        private readonly InputAction m_Action_Drink;
        private readonly InputAction m_Action_Throw;
        private readonly InputAction m_Action_Interact;
        private readonly InputAction m_Action_KeyboardAim;
        private readonly InputAction m_Action_GamepadAim;
        public struct ActionActions
        {
            private @PlayerControls m_Wrapper;
            public ActionActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Restart => m_Wrapper.m_Action_Restart;
            public InputAction @Drink => m_Wrapper.m_Action_Drink;
            public InputAction @Throw => m_Wrapper.m_Action_Throw;
            public InputAction @Interact => m_Wrapper.m_Action_Interact;
            public InputAction @KeyboardAim => m_Wrapper.m_Action_KeyboardAim;
            public InputAction @GamepadAim => m_Wrapper.m_Action_GamepadAim;
            public InputActionMap Get() { return m_Wrapper.m_Action; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ActionActions set) { return set.Get(); }
            public void SetCallbacks(IActionActions instance)
            {
                if (m_Wrapper.m_ActionActionsCallbackInterface != null)
                {
                    @Restart.started -= m_Wrapper.m_ActionActionsCallbackInterface.OnRestart;
                    @Restart.performed -= m_Wrapper.m_ActionActionsCallbackInterface.OnRestart;
                    @Restart.canceled -= m_Wrapper.m_ActionActionsCallbackInterface.OnRestart;
                    @Drink.started -= m_Wrapper.m_ActionActionsCallbackInterface.OnDrink;
                    @Drink.performed -= m_Wrapper.m_ActionActionsCallbackInterface.OnDrink;
                    @Drink.canceled -= m_Wrapper.m_ActionActionsCallbackInterface.OnDrink;
                    @Throw.started -= m_Wrapper.m_ActionActionsCallbackInterface.OnThrow;
                    @Throw.performed -= m_Wrapper.m_ActionActionsCallbackInterface.OnThrow;
                    @Throw.canceled -= m_Wrapper.m_ActionActionsCallbackInterface.OnThrow;
                    @Interact.started -= m_Wrapper.m_ActionActionsCallbackInterface.OnInteract;
                    @Interact.performed -= m_Wrapper.m_ActionActionsCallbackInterface.OnInteract;
                    @Interact.canceled -= m_Wrapper.m_ActionActionsCallbackInterface.OnInteract;
                    @KeyboardAim.started -= m_Wrapper.m_ActionActionsCallbackInterface.OnKeyboardAim;
                    @KeyboardAim.performed -= m_Wrapper.m_ActionActionsCallbackInterface.OnKeyboardAim;
                    @KeyboardAim.canceled -= m_Wrapper.m_ActionActionsCallbackInterface.OnKeyboardAim;
                    @GamepadAim.started -= m_Wrapper.m_ActionActionsCallbackInterface.OnGamepadAim;
                    @GamepadAim.performed -= m_Wrapper.m_ActionActionsCallbackInterface.OnGamepadAim;
                    @GamepadAim.canceled -= m_Wrapper.m_ActionActionsCallbackInterface.OnGamepadAim;
                }
                m_Wrapper.m_ActionActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Restart.started += instance.OnRestart;
                    @Restart.performed += instance.OnRestart;
                    @Restart.canceled += instance.OnRestart;
                    @Drink.started += instance.OnDrink;
                    @Drink.performed += instance.OnDrink;
                    @Drink.canceled += instance.OnDrink;
                    @Throw.started += instance.OnThrow;
                    @Throw.performed += instance.OnThrow;
                    @Throw.canceled += instance.OnThrow;
                    @Interact.started += instance.OnInteract;
                    @Interact.performed += instance.OnInteract;
                    @Interact.canceled += instance.OnInteract;
                    @KeyboardAim.started += instance.OnKeyboardAim;
                    @KeyboardAim.performed += instance.OnKeyboardAim;
                    @KeyboardAim.canceled += instance.OnKeyboardAim;
                    @GamepadAim.started += instance.OnGamepadAim;
                    @GamepadAim.performed += instance.OnGamepadAim;
                    @GamepadAim.canceled += instance.OnGamepadAim;
                }
            }
        }
        public ActionActions @Action => new ActionActions(this);

        // Other
        private readonly InputActionMap m_Other;
        private IOtherActions m_OtherActionsCallbackInterface;
        private readonly InputAction m_Other_Potion1;
        private readonly InputAction m_Other_Potion2;
        private readonly InputAction m_Other_Potion3;
        private readonly InputAction m_Other_Menu;
        private readonly InputAction m_Other_ScrollPotionUp;
        private readonly InputAction m_Other_ScrollPotionDown;
        public struct OtherActions
        {
            private @PlayerControls m_Wrapper;
            public OtherActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Potion1 => m_Wrapper.m_Other_Potion1;
            public InputAction @Potion2 => m_Wrapper.m_Other_Potion2;
            public InputAction @Potion3 => m_Wrapper.m_Other_Potion3;
            public InputAction @Menu => m_Wrapper.m_Other_Menu;
            public InputAction @ScrollPotionUp => m_Wrapper.m_Other_ScrollPotionUp;
            public InputAction @ScrollPotionDown => m_Wrapper.m_Other_ScrollPotionDown;
            public InputActionMap Get() { return m_Wrapper.m_Other; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OtherActions set) { return set.Get(); }
            public void SetCallbacks(IOtherActions instance)
            {
                if (m_Wrapper.m_OtherActionsCallbackInterface != null)
                {
                    @Potion1.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion1;
                    @Potion1.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion1;
                    @Potion1.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion1;
                    @Potion2.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion2;
                    @Potion2.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion2;
                    @Potion2.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion2;
                    @Potion3.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion3;
                    @Potion3.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion3;
                    @Potion3.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnPotion3;
                    @Menu.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnMenu;
                    @Menu.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnMenu;
                    @Menu.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnMenu;
                    @ScrollPotionUp.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnScrollPotionUp;
                    @ScrollPotionUp.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnScrollPotionUp;
                    @ScrollPotionUp.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnScrollPotionUp;
                    @ScrollPotionDown.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnScrollPotionDown;
                    @ScrollPotionDown.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnScrollPotionDown;
                    @ScrollPotionDown.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnScrollPotionDown;
                }
                m_Wrapper.m_OtherActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Potion1.started += instance.OnPotion1;
                    @Potion1.performed += instance.OnPotion1;
                    @Potion1.canceled += instance.OnPotion1;
                    @Potion2.started += instance.OnPotion2;
                    @Potion2.performed += instance.OnPotion2;
                    @Potion2.canceled += instance.OnPotion2;
                    @Potion3.started += instance.OnPotion3;
                    @Potion3.performed += instance.OnPotion3;
                    @Potion3.canceled += instance.OnPotion3;
                    @Menu.started += instance.OnMenu;
                    @Menu.performed += instance.OnMenu;
                    @Menu.canceled += instance.OnMenu;
                    @ScrollPotionUp.started += instance.OnScrollPotionUp;
                    @ScrollPotionUp.performed += instance.OnScrollPotionUp;
                    @ScrollPotionUp.canceled += instance.OnScrollPotionUp;
                    @ScrollPotionDown.started += instance.OnScrollPotionDown;
                    @ScrollPotionDown.performed += instance.OnScrollPotionDown;
                    @ScrollPotionDown.canceled += instance.OnScrollPotionDown;
                }
            }
        }
        public OtherActions @Other => new OtherActions(this);
        private int m_KeyboardSchemeIndex = -1;
        public InputControlScheme KeyboardScheme
        {
            get
            {
                if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
                return asset.controlSchemes[m_KeyboardSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        public interface IMovementActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnLookDown(InputAction.CallbackContext context);
        }
        public interface IActionActions
        {
            void OnRestart(InputAction.CallbackContext context);
            void OnDrink(InputAction.CallbackContext context);
            void OnThrow(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnKeyboardAim(InputAction.CallbackContext context);
            void OnGamepadAim(InputAction.CallbackContext context);
        }
        public interface IOtherActions
        {
            void OnPotion1(InputAction.CallbackContext context);
            void OnPotion2(InputAction.CallbackContext context);
            void OnPotion3(InputAction.CallbackContext context);
            void OnMenu(InputAction.CallbackContext context);
            void OnScrollPotionUp(InputAction.CallbackContext context);
            void OnScrollPotionDown(InputAction.CallbackContext context);
        }
    }
}
